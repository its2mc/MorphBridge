/* Morph Bridge Application module. 
Created By: Phillip Ochola Mak'Anyengo,
Release Date: ,
Email: its2uraps@gmail.com, 
Github: https://github.com/its2mc,
Liscence: 
*/

//Channel Object. This is the King Kunta.. :D 
var channel = {
	//Variables to be used
	time_stamp : 0,
		
	//Channel initialisation. 
	init: function(){
	}
	
};

module.exports.channel = channel;


//ZMQ interproc Communication Handler
var zmq = require('zmq'),
publisher = zmq.socket('pub');

var comms = {
	init: function(){
		//if publisher already bound skip
		publisher.bind('icp://shcomms', function(err) {
 			if(err)
    			console.log(err);
  			else
    			console.log("Listening on 8688...");
			})
		},
		//if not then connect to bound publisher
	subscribe: function(){},
	broadcast: function(msg){
		publisher.send(msg);
	}
};

module.exports.broadcast = comms.broadcast;
module.exports.subscribe = comms.subscribe;

//Log Handler: This will manage custom error messages for platform errors.
//The messages are coded to make it lighter for smaller devics
var winston = require('winston');
var logger = {
	init: function(){
		var temp = new (winston.Logger)({
			transports: [
				new (winston.transports.File({
					name: 'error-file',
					filename: 'logs/errors.log',
					level: 'error',
					handleExceptions: true
				})),
				new (winston.transports.File({
					name: 'info-file',
					filename: 'logs/stats.log',
					level: 'info'
				}))
			]
		});
		return temp;
	},
	logInfo: function(){},
	logError: function(){},
	debug: function(){}
};

module.exports.logger.error = logger.logErr;
module.exports.logger.debug = logger.debug;
module.exports.logger.status = logger.status;

